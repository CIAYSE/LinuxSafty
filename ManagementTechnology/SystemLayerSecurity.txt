系统层安全
系统层安全是安全的核心，主要包括操作系统层面采用的各种安全技术。

1.系统层安全架构
操作系统作为信息系统的核心，为网络服务、数据库系统等上层应用的正常运行提供了基本保障。 

2.身份标识与鉴别
操作系统通过PAM机制来实现用户的身份标识与鉴别。
 
3.安全协议
安全协议，通常也被称作口令协议，它是以口令学为基础的消息交换协议，其目的是在网络环境中提供各种安全服务。
口令学是网络安全的基础，但网络安全不能单纯依靠安全的口令算法。
安全协议是网络安全的一个重要组成部分，需要通过安全协议进行实体之间的认证、在实体之间安全地分配密钥或其他各种秘密、确认发送和接收的消息的非否认性等。 

4.自主访问控制
访问控制，是指控制系统中主体对客体的访问权限。
其中主体是指引起信息在客体间交换或者改变系统状态的主动实体，通常是发出访问请求的对象，例如进程；
客体是指包含或接收数据的被动实体，是信息的载体，通常是被访问的对象，例如文件；
而权限是指对客体进行特定模式访问的操作许可。 

5.强制访问控制
强制访问控制MAC（Mandatory Access Control）的基本思想是：每个主体、客体（文件、消息队列、共享区域、信号量）都赋予相应的安全属性（标记），该属性由管理员或系统按严格的规则设置，用户不能修改。
 
6.内存客体重用
客体重用机制保证在主体活动结束后，主体占用的存储客体中的信息将不能被另一个主体使用。 

7.主机防火墙
操作系统默认安装iptables防火墙。
#############################################################################################
1.系统层安全架构
    操作系统作为信息系统的核心，为网络服务、数据库系统等上层应用的正常运行提供了基本保障。
    然而仅依赖应用空间的安全机制，无法从根本上解决信息系统的安全问题。没有操作系统安全机制的保障，应用空间的安全机制容易遭受破坏、旁路和欺骗攻击。
    上层应用的安全机制，诸如访问控制和加密等必须依赖操作系统安全机制的支持，才能实现其安全功能。
    操作系统提供身份标识与鉴别、安全协议、细粒度访问控制、强制访问控制、文件完整性检查、安全审计、内存客体重用、可信路径等安全机制，保障操作系统的安全性，为各类上层应用提供安全基础。
    操作系统的安全架构如图1所示
      安全加固工具
         |
        \ /
      IDENT完成用户的身份标识与鉴别
         |
        \ /
      ACL细粒度自主访问控制
         |
        \ /
      LSM内核安全框架(包含MAC强制访问控制)<->CAP权能策略
                             |
                            \ /
                          AUDIT安全审计
                      MOR            SAK        SP
                    内存客体存用    可信路径	安全协议

    相关说明如下：
    安全加固工具，提供方便的安全配置与管理，实现对系统服务、文件权限、内核参数、日志审计、账户口令等的安全加固。
    IDENT完成用户的身份标识与鉴别；可信路径提供安全注意键，启动可信的登录流程。
    ACL通过访问控制列表实现细粒度的自主访问控制。
    LSM（Linux Security Module）内核安全框架
    CAP基于LSM框架实现MAC强制访问控制。
    AUDIT负责进行安全审计。
    MOR禁止内存客体重用。
    SP为系统集成的安全协议。
 #############################################################################################   
2.身份标识与鉴别
  操作系统通过PAM机制来实现用户的身份标识与鉴别。
  可插入式验证模块PAM（Pluggable Authentication Module），是SUN公司最早提出和开发的一套为系统登录应用程序提供验证和相关的安全服务的套件。
  主要功能包括认证管理、账户管理、会话管理和口令管理。
  操作系统默认使用Linux-PAM。
 #############################################################################################   
3.安全协议
安全协议，通常也被称作口令协议，它是以口令学为基础的消息交换协议，其目的是在网络环境中提供各种安全服务。口令学是网络安全的基础，但网络安全不能单纯依靠安全的口令算法。
安全协议是网络安全的一个重要组成部分，需要通过安全协议进行实体之间的认证、在实体之间安全地分配密钥或其他各种秘密、确认发送和接收的消息的非否认性等。
安全目标是多种多样的。例如，认证协议的目标是认证参加协议的实体的身份。此外，许多认证协议还有一个附加的目标，即在主体之间安全地分配密钥或其他各种秘密。
操作系统支持的安全协议如下：
		SSH
		SSL
		IPSec
		SFTP
 #############################################################################################  
 4.自主访问控制
 操作系统通过UGO和ACL机制实现自主访问控制。
 #############################################################################################  
 5.强制访问控制
 强制访问控制MAC（Mandatory Access Control）的基本思想是：每个主体、客体（文件、消息队列、共享区域、信号量）都赋予相应的安全属性（标记），
 该属性由管理员或系统按严格的规则设置，用户不能修改。
 主体对客体的访问由强制安全控制机制按照某种安全策略，根据主、客体安全属性，确定是否允许访问。若系统判断不许访问，任何人（包括客体主）也不能访问。
 #############################################################################################  
 6.内存客体重用
 客体重用机制保证在主体活动结束后，主体占用的存储客体中的信息将不能被另一个主体使用。
 在计算机信息系统可信计算机的空闲存储客体空间中，对客体初始指定、分配或再分配一个主体之前，撤消该客体所含信息的所有授权。
 当主体获得对一个已被释放的客体的访问权时，当前主体不能获得原主体活动所产生的任何信息。
 内存客体重用是用于防止新主体获得先前主体残留在内存中的信息。内存客体重用在分配内存时实施，它对内存进行覆写，以达到禁止重用目的。
 ############################################################################################# 
 7.主机防火墙
 操作系统默认安装iptables防火墙。
  防火墙是抵御网络攻击的第一道防线，它坐落于网络之间的枢纽点，保护某个网络以抵御来自其他网络的攻击。它放置的位置必须是受保护网络与其他网络的唯一进出口点。如果有其他入口节点可以进入受保护网络，防火墙将毫无作用。
  Linux内核内置了一套防火墙机制，称为Netfilter。而设置和控制Netfilter的工具是iptables。本系统就是使用iptables制定的防火墙规则。iptables的规则链组织结构如图1所示。
 ############################################################################################# 
 
 系统层安全维护：
 	一、系统层账户清单
	二、账户口令维护
		1.账户维护策略
			进行严格的账户管理，实施严格的账户策略。
			严格控制增加、修改、删除系统中的账户、群组。
			删除所有系统上不使用的账户。
			管理员创建账户时，需要明确权限和职责、操作建议。
			管理员代行root权限时，需要先自行登录再通过su切换到root账户。
			采用sha512对系统口令进行加密。
		2.创建账户
				在遵从最小账户原则的基础上，管理员可根据需要创建账户。使用系统命令useradd来创建新的账户。
				说明： 
				仅root用户可以创建和删除账户。
				操作说明
				useradd [-u UID] [-g GID] [-d HOME] [-mM] [-s shell] username [-p PASSSWORD]相关参数说明请参见表1。
				创建账户参数说明 
				-u 直接给予一个UID。
				-g 直接给予一个GID。
				-d 直接将该用户的根目录指向已经存在的目录（系统不会再建立）。
				-m 新建该用户的根目录，并将/etc/skel中的文件复制到用户根目录。 
				-M 不建立用户的根目录。
				-s 定义其使用的shell。
				-p 设置用户的密码。
				 注意： 
				创建账户时，若使用-p参数设置密码，使用history命令可以查看到该账户设置的明文密码，导致账户口令泄露
				，因此不建议使用-p参数。设置、修改口令请使用passwd命令，具体请参照修改口令。
				操作举例
				创建一个账户名称为test的普通用户。
				useradd test创建一个普通账户，其根目录为home/test。 useradd -d /home/test test
		3.删除账户
				userdel [-r] account 
				参数 参数说明
				-r 删除该用户目录下的所有目录。
		4.设置账户的有效期
		操作说明
			chage [-m mindays] [-M maxdays] [-d lastday] [-I inactive] [-E expiredate] [-W warndays] user
			参数 参数说明
			-m 口令可更改的最小天数。为零时代表任何时候都可以更改口令。
			-M 口令保持有效的最大天数。为-1时可删除这项口令的检测。
			-d 上一次更改的日期。
			-I 列出当前的设置。由非特权用户来确定他们的口令或账户何时过期。
			-E 账户到期的日期。过了这天，此账户将不可用。
			-W 用户口令到期前，提前收到警告信息的天数。
			对于超过期限的用户，应该检查是否允许继续使用，如果不使用则应该将这些用户删除，防止用户被非授权使用，
			删除账户请参考删除账户小节
		5.变更账户权限
		操作说明
			groupmems -g group [-a|-d] user相关参数说明请参见表1。
				-g 指定群组名称。
				-a 将指定账户加到指定群组。
				-d 将指定账户加从指定群组中移除。
			操作举例：将用户test增加到特权组root。groupmems -g root -a test
		6.锁定账户
		管理员可锁定暂时不使用的账户，之后根据实际情况再进行解锁。通过系统命令passwd或usermod来锁定账户。
		操作说明
			锁定账户可使用如下命令：
			passwd -l user 或
			usermod -L user
			操作举例：锁定test账户。passwd -l test
		7.解锁账户
		操作说明
			解锁账户可使用如下命令：
			passwd -u user 或
			usermod -U user
		8.修改口令
		操作说明
			passwd [-g] [name]
			-g：表示修改指定群组的口令
		9.监控账户操作
		管理员需要定期检查各个账户的操作，包括账户是否操作异常或者非法操作。
		操作说明
		打开账户根目录下的“.bash_history([home]/.bash_history)”文件，查看账户的操作历史，确认是否存在非法或异常操作。
		10.检查账户
		打开文件/etc/passwd，比较文件中的账户与主机账户清单描述的账户是否一致。若不一致，建议查出多余账户存在的原因，若无故增加，则应删除。
		检查系统账户是否可登录，即账户的shell是否为/sbin/nologin（/etc/passwd文件每行最后一个字段值）；若不是，则应改为/sbin/nologin
		11.系统口令加密算法维护
		管理员可以对系统的口令加密算法进行定期检查，查看当前系统的加密算法是否与设定的算法一致。默认情况下的加密算法是sha512。
		操作说明：要确认账户root的口令加密算法，打开/etc/pam.d/password-auth和/etc/pam.d/system-auth文件，
		查看password sufficient pam_unix.so后的参数中的口令加密算法为sha512。
		到口令加密算法中找到sha512对应的识别码是6。
		打开/etc/shadow文件，发现root账户第二字段起始字符为“$6$”，说明与设定的算法一致。
	三、系统安全维护：
		1.服务维护策略
			管理建议
				最小服务和组件。
				区分服务器的用途和角色，尽量避免安装不必要的服务和组件。
				关闭未使用的服务。
				服务内部组件也应采用上述原则进行裁减。
		2.检查进程
		管理员进行安全维护时，需要检查是否有多余的进程，及时发现不合理的进程并处理，避免风险。
			操作说明
			用系统命令“ps -aux”查看系统当前所有进程。
			查看是否有多余进程（根据用户安装的组件不同，运行的进程有差异，具体由用户根据实际情况甄别）。
			若发现有多余进程，则用系统命令“kill -9 PID”删除该进程。
		3.检查服务/端口
		管理员应检查是否有多余的服务，如果有多余服务及时停止，以避免安全风险。
			操作说明
			用户执行systemctl list-units --type=service命令查看系统所有服务。
			查看是否有不需要使用的服务（根据用户安装的组件不同，开启服务有差异，具体由用户根据实际情况甄别）。
			若存在不需要的服务，可用如下方式删除服务。
			以rsyslog服务为例，如下操作：
			执行systemctl stop rsyslog命令停止该服务运行。
			执行systemctl disable rsyslog命令关闭该服务随机启动。
			 警告： 
			本操作前请务必先确认该服务为不需要的服务。
		4.检查主机间通信
		管理员应检查是否有多余的、非法的主机间通信，避免风险。
			操作说明
			用系统命令“netstat -an”查看当前系统中开放的所有端口。
			参考通信矩阵中的端口列表，检查当前是否有多余开放的端口。
			若存在多余端口，确认是否有必要开放，若无必要，则应关闭。
  

